{"ast":null,"code":"var _jsxFileName = \"/srv/http/scrumPoker/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Main from \"./layouts/Main\";\nimport { IntlProvider } from 'react-intl';\nimport translations from \"./i18n/pt_br/translations\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './themes/theme';\nimport { GlobalStyles } from './themes/global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntlProvider, {\n      messages: translations,\n      locale: \"pt-br\",\n      defaultLocale: \"en\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/srv/http/scrumPoker/frontend/src/App.js"],"names":["React","useState","Main","IntlProvider","translations","ThemeProvider","lightTheme","darkTheme","GlobalStyles","App","theme","setTheme","toggleTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,sCAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,YAAT,QAA6B,iBAA7B;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,OAAD,CAAlC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACtB,QAAGF,KAAK,KAAK,OAAb,EAAqB;AACjBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACH,KAFD,MAEK;AACDA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH;AACJ,GAND;;AAQA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBJ,UAApB,GAAiCC,SAAvD;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH,YAAxB;AAAsC,MAAA,MAAM,EAAC,OAA7C;AAAqD,MAAA,aAAa,EAAC,IAAnE;AAAA,6BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnBQK,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Main from \"./layouts/Main\";\nimport { IntlProvider } from 'react-intl';\nimport translations from \"./i18n/pt_br/translations\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './themes/theme';\nimport { GlobalStyles } from './themes/global';\n\nfunction App(){\n    const [theme, setTheme] = useState('light');\n\n    const toggleTheme = () => {\n        if(theme === \"light\"){\n            setTheme(\"dark\");\n        }else{\n            setTheme(\"light\");\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n            <GlobalStyles />\n            <IntlProvider messages={translations} locale=\"pt-br\" defaultLocale=\"en\">\n                <Main />\n            </IntlProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}