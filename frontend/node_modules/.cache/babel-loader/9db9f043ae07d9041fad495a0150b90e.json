{"ast":null,"code":"var _jsxFileName = \"/srv/http/scrumPoker/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport translations from \"./i18n/pt_br/translations\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './themes/theme';\nimport { GlobalStyles } from './themes/global';\nimport { Header } from \"./components\";\nimport Container from 'react-bootstrap/Container';\nimport CreateRoom from './layouts/CreateRoom';\nimport Main from \"./layouts/Main\";\nimport Room from \"./layouts/Room\";\nimport NoMatch from \"./layouts/NoMatch\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n  const [language, setLanguage] = useState('pt-br');\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  const onChangeLang = (e, event) => {\n    setLanguage(event.target.dataset.country);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntlProvider, {\n      messages: translations,\n      locale: language,\n      defaultLocale: \"en\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          selectedLanguage: language,\n          onChangeLang: onChangeLang,\n          toggleTheme: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/newRoom\",\n              children: /*#__PURE__*/_jsxDEV(CreateRoom, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/room/:roomUUID\",\n              children: /*#__PURE__*/_jsxDEV(Room, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              children: /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"R8U5b9BRKwZTWJcU0QNtDgHx9kg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/srv/http/scrumPoker/frontend/src/App.js"],"names":["React","useState","IntlProvider","translations","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Header","Container","CreateRoom","Main","Room","NoMatch","BrowserRouter","Router","Switch","Route","App","theme","setTheme","language","setLanguage","toggleTheme","onChangeLang","e","event","target","dataset","country"],"mappings":";;;AAAI,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACJ,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,sCAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,OAAD,CAAxC;;AAEA,QAAMsB,WAAW,GAAG,MAAM;AACtB,QAAGJ,KAAK,KAAK,OAAb,EAAqB;AACjBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACH,KAFD,MAEK;AACDA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH;AACJ,GAND;;AAQA,QAAMI,YAAY,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/BJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,OAAtB,CAAX;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,KAAK,KAAK,OAAV,GAAoBd,UAApB,GAAiCC,SAAvD;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH,YAAxB;AAAsC,MAAA,MAAM,EAAEkB,QAA9C;AAAwD,MAAA,aAAa,EAAC,IAAtE;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,gBAAgB,EAAEA,QAA1B;AAAoC,UAAA,YAAY,EAAGG,YAAnD;AAAkE,UAAA,WAAW,EAAGD;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAW,UAAA,KAAK,MAAhB;AAAA,iCACQ,QAAC,MAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAA,qCAAsB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAA,qCAAuB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,iBAAZ;AAAA,qCAA8B,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,GAAZ;AAAA,qCAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAnCQL,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["    import React, { useState } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport translations from \"./i18n/pt_br/translations\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './themes/theme';\nimport { GlobalStyles } from './themes/global';\nimport { Header } from \"./components\";\nimport Container from 'react-bootstrap/Container';\nimport CreateRoom from './layouts/CreateRoom';\nimport Main from \"./layouts/Main\";\nimport Room from \"./layouts/Room\";\nimport NoMatch from \"./layouts/NoMatch\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App(){\n    const [theme, setTheme] = useState('light');\n    const [language, setLanguage] = useState('pt-br');\n\n    const toggleTheme = () => {\n        if(theme === \"light\"){\n            setTheme(\"dark\");\n        }else{\n            setTheme(\"light\");\n        }\n    }\n\n    const onChangeLang = (e, event) => {\n        setLanguage(event.target.dataset.country);\n    }\n\n    return (\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n            <GlobalStyles />\n            <IntlProvider messages={translations} locale={language} defaultLocale=\"en\">\n                <Router>\n                    <Header selectedLanguage={language} onChangeLang={ onChangeLang } toggleTheme={ toggleTheme } />\n                    <Container fluid>\n                            <Switch>\n                                <Route exact path=\"/\"><Main /></Route>\n                                <Route path=\"/newRoom\"><CreateRoom /></Route>\n                                <Route path=\"/room/:roomUUID\"><Room /></Route>\n                                <Route path=\"*\"><NoMatch /></Route>\n                            </Switch>\n                        \n                    </Container>\n                </Router>\n            </IntlProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}